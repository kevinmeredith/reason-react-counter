// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Greeting");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      var message = self[/* state */2][/* show */1] ? "Clicked " + (Pervasives.string_of_int(self[/* state */2][/* count */0]) + "times") : "hidden!";
      return React.createElement("div", undefined, React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(self[/* send */4], /* Click */0);
                        })
                    }, "+"), React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(self[/* send */4], /* Toggle */1);
                        })
                    }, "Toggle"), React.createElement("span", undefined, message));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* count */0,
              /* show : false */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action !== 0) {
        return /* Update */Block.__(0, [/* record */[
                    /* count */state[/* count */0],
                    /* show */1 - state[/* show */1]
                  ]]);
      } else {
        return /* Update */Block.__(0, [/* record */[
                    /* count */state[/* count */0] + 1 | 0,
                    /* show */state[/* show */1]
                  ]]);
      }
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
